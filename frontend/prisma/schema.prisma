// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}


model User {
  id        Int      @id @default(autoincrement())
  user_id   String   @unique
  name      String?
  Profile   Profile?
  wallets   Wallet[]
  createdCommunities Community[] @relation("CommunityCreator")
  joinedCommunities Community[] @relation("CommunityMembers")
}

model Profile {
  id              Int       @id @default(autoincrement())
  bio             String?
  profile_picture String?
  location        String?
  birthday        DateTime?
  website         String?
  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique // relation scalar field (used in the `@relation` attribute above)
}
model Wallet {
  id                Int    @id @default(autoincrement())
  address           String
  chainId           String
  walletClientType  String
  connectorType     String
  user              User   @relation(fields: [userId], references: [id])
  userId            Int
}

model Community {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  coverImage  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  token   Token?

  links CommunityLinks?

  creator    User   @relation("CommunityCreator", fields: [creatorId], references: [id])
  creatorId  Int
  members    User[] @relation("CommunityMembers")
}

model Token {
  id                  Int      @id @default(autoincrement())
  name                String
  symbol              String
  logo                String?
  initialSupply       Float
  initialPrice        Float
  maxSupply           Float
  reserveRatio        Float
  investmentStartDate DateTime

  community   Community @relation(fields: [communityId], references: [id])
  communityId Int       @unique
}

model CommunityLinks {
  id           Int     @id @default(autoincrement())
  website      String?
  twitter      String?
  telegram     String?
  discord      String?

  community   Community @relation(fields: [communityId], references: [id])
  communityId Int       @unique
}


