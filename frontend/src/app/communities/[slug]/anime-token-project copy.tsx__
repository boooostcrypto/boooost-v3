import { useState } from 'react'
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Textarea } from "@/components/ui/textarea"
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { ChevronRight, Home } from 'lucide-react'
import Link from 'next/link'
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts'

export default function Component() {
  const [amount, setAmount] = useState('0')

  const tokenHolders = [
    { rank: 1, address: '0x1234...5678', balance: '100,000' },
    { rank: 2, address: '0xabcd...efgh', balance: '75,000' },
    { rank: 3, address: '0x9876...5432', balance: '50,000' },
    { rank: 4, address: '0xijkl...mnop', balance: '25,000' },
    { rank: 5, address: '0xqrst...uvwx', balance: '10,000' },
  ]

  const bondingCurveData = [
    { supply: 0, price: 0 },
    { supply: 1000000, price: 0.1 },
    { supply: 2000000, price: 0.2 },
    { supply: 3000000, price: 0.275 },
    { supply: 4000000, price: 0.325 },
    { supply: 5000000, price: 0.35 },
  ]

  const activities = [
    { type: 'Buy', amount: '1000', date: '2023-06-01', address: '0xabcd...efgh' },
    { type: 'Sell', amount: '500', date: '2023-06-02', address: '0x1234...5678' },
    { type: 'Buy', amount: '2000', date: '2023-06-03', address: '0x9876...5432' },
    { type: 'Buy', amount: '750', date: '2023-06-04', address: '0xijkl...mnop' },
    { type: 'Sell', amount: '300', date: '2023-06-05', address: '0xqrst...uvwx' },
  ]

  return (
    <div className="space-y-4 bg-white text-gray-800">
      <nav className="flex px-4 py-2 bg-blue-600" aria-label="Breadcrumb">
        <ol className="inline-flex items-center space-x-1 md:space-x-3">
          <li className="inline-flex items-center">
            <Link href="/" className="inline-flex items-center text-sm font-medium text-white hover:text-blue-200">
              <Home className="w-4 h-4 mr-2" />
              Home
            </Link>
          </li>
          <li>
            <div className="flex items-center">
              <ChevronRight className="w-4 h-4 text-white" />
              <Link href="/communities" className="ml-1 text-sm font-medium text-white hover:text-blue-200 md:ml-2">
                Communities
              </Link>
            </div>
          </li>
          <li aria-current="page">
            <div className="flex items-center">
              <ChevronRight className="w-4 h-4 text-white" />
              <span className="ml-1 text-sm font-medium text-blue-200 md:ml-2">Anime Community</span>
            </div>
          </li>
        </ol>
      </nav>

      <div 
        className="h-64 bg-cover bg-center"
        style={{ backgroundImage: "url('https://public.blob.vercel-storage.com/anime-cityscape-night-RWwYQHOtbBQkqNZIo7WjLkiQKEROdM.jpg')" }}
      >
        <div className="h-full flex items-center justify-center bg-black bg-opacity-50">
          <h1 className="text-4xl font-bold text-white">Anime Community Token Project</h1>
        </div>
      </div>
      <div className="max-w-7xl mx-auto p-4 grid grid-cols-1 md:grid-cols-2 gap-8">
        <div className="space-y-8">
          <Card>
            <CardHeader>
              <CardTitle className="text-blue-600">Bonding Curve</CardTitle>
            </CardHeader>
            <CardContent>
              <ResponsiveContainer width="100%" height={300}>
                <LineChart data={bondingCurveData}>
                  <CartesianGrid strokeDasharray="3 3" stroke="#a0aec0" />
                  <XAxis dataKey="supply" label={{ value: 'Token Supply', position: 'insideBottom', offset: -5 }} stroke="#4a5568" />
                  <YAxis label={{ value: 'Price', angle: -90, position: 'insideLeft' }} stroke="#4a5568" />
                  <Tooltip contentStyle={{ backgroundColor: '#ffffff', border: '1px solid #e2e8f0' }} />
                  <Line type="monotone" dataKey="price" stroke="#3182ce" />
                </LineChart>
              </ResponsiveContainer>
            </CardContent>
          </Card>
          <section className="text-gray-800">
            <p className="text-lg mb-4">
              Join us in building a vibrant anime community platform powered by blockchain technology.
              Our goal is to create an inclusive space for anime enthusiasts to connect, share, and
              contribute to the growth of the anime industry.
            </p>
            <p className="mb-4">
              The funds raised will be fairly distributed as tokens during our launch. These tokens
              will be the backbone of our ecosystem, enabling:
            </p>
            <ul className="list-disc list-inside mb-4">
              <li>Access to exclusive anime content and early releases</li>
              <li>Voting rights on community decisions and future projects</li>
              <li>Rewards for content creation and community engagement</li>
              <li>Trading and investment opportunities within the anime market</li>
            </ul>
            <p>
              With your support, we'll build a comprehensive anime information platform and a thriving
              community hub where fans can discuss, create, and shape the future of anime together.
            </p>
          </section>
          <Card>
            <CardContent>
              <Tabs defaultValue="comments" className="w-full">
                <TabsList className="grid w-full grid-cols-2 mb-4">
                  <TabsTrigger value="comments">Comments</TabsTrigger>
                  <TabsTrigger value="activities">Activities</TabsTrigger>
                </TabsList>
                <TabsContent value="comments">
                  <Textarea placeholder="Share your thoughts about this project..." className="bg-white text-gray-800 border-gray-300" />
                  <Button className="mt-4 bg-blue-600 text-white hover:bg-blue-700">Post Comment</Button>
                </TabsContent>
                <TabsContent value="activities">
                  <Table>
                    <TableHeader>
                      <TableRow>
                        <TableHead>Type</TableHead>
                        <TableHead>Amount</TableHead>
                        <TableHead>Date</TableHead>
                        <TableHead>Address</TableHead>
                      </TableRow>
                    </TableHeader>
                    <TableBody>
                      {activities.map((activity, index) => (
                        <TableRow key={index}>
                          <TableCell>{activity.type}</TableCell>
                          <TableCell>{activity.amount}</TableCell>
                          <TableCell>{activity.date}</TableCell>
                          <TableCell>{activity.address}</TableCell>
                        </TableRow>
                      ))}
                    </TableBody>
                  </Table>
                </TabsContent>
              </Tabs>
            </CardContent>
          </Card>
        </div>
        <div className="space-y-8">
          <Card>
            <CardHeader>
              <CardTitle className="text-blue-600">Token Actions</CardTitle>
            </CardHeader>
            <CardContent>
              <Tabs defaultValue="buy" className="w-full">
                <TabsList className="grid w-full grid-cols-2">
                  <TabsTrigger value="buy">Buy</TabsTrigger>
                  <TabsTrigger value="sell">Sell</TabsTrigger>
                </TabsList>
                <TabsContent value="buy">
                  <div className="space-y-4">
                    <div className="flex items-center space-x-2">
                      <Input
                        type="number"
                        placeholder="Enter amount"
                        value={amount}
                        onChange={(e) => setAmount(e.target.value)}
                        className="flex-grow bg-white text-gray-800 border-gray-300"
                      />
                      <span className="font-semibold">SOL</span>
                    </div>
                    <Button className="w-full bg-blue-600 text-white hover:bg-blue-700">Buy Tokens</Button>
                  </div>
                </TabsContent>
                <TabsContent value="sell">
                  <div className="space-y-4">
                    <div className="flex items-center space-x-2">
                      <Input
                        type="number"
                        placeholder="Enter amount"
                        value={amount}
                        onChange={(e) => setAmount(e.target.value)}
                        className="flex-grow bg-white text-gray-800 border-gray-300"
                      />
                      <span className="font-semibold">Anime</span>
                    </div>
                    <Button className="w-full bg-blue-600 text-white hover:bg-blue-700">Sell Tokens</Button>
                  </div>
                </TabsContent>
              </Tabs>
            </CardContent>
          </Card>
          <Card>
            <CardHeader>
              <CardTitle className="text-blue-600">Project Stats</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="flex justify-between">
                <span>Funds Raised:</span>
                <span className="font-bold text-blue-600">$1,500,000</span>
              </div>
              <div className="flex justify-between">
                <span>Liquidity Pool:</span>
                <span className="font-bold text-blue-600">$500,000</span>
              </div>
              <div className="flex justify-between">
                <span>Token Supply:</span>
                <span className="font-bold text-blue-600">5,000,000 Anime</span>
              </div>
              <div className="flex justify-between">
                <span>Current Token Price:</span>
                <span className="font-bold text-blue-600">0.05 SOL</span>
              </div>
            </CardContent>
          </Card>
          <Card>
            <CardHeader>
              <CardTitle className="text-blue-600">Top Token Holders</CardTitle>
            </CardHeader>
            <CardContent>
              <Table>
                <TableHeader>
                  <TableRow>
                    <TableHead>Rank</TableHead>
                    <TableHead>Address</TableHead>
                    <TableHead>Balance</TableHead>
                  </TableRow>
                </TableHeader>
                <TableBody>
                  {tokenHolders.map((holder) => (
                    <TableRow key={holder.rank}>
                      <TableCell>{holder.rank}</TableCell>
                      <TableCell>{holder.address}</TableCell>
                      <TableCell>{holder.balance}</TableCell>
                    </TableRow>
                  ))}
                </TableBody>
              </Table>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  )
}